plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.edge.detect'
    compileSdk 34

    defaultConfig {
        applicationId 'com.edge.detect'
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName '1.0'

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17 -O2"
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    buildFeatures {
        viewBinding true
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.activity:activity-ktx:1.9.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.6'
    implementation 'androidx.camera:camera-core:1.3.4'
    implementation 'androidx.camera:camera-camera2:1.3.4'
    implementation 'androidx.camera:camera-lifecycle:1.3.4'
    implementation 'androidx.camera:camera-view:1.3.4'
    // Optional: OpenCV AAR if using Maven Central variant (fallback to SDK via CMake otherwise)
    // implementation 'org.opencv:opencv-android:4.8.0'
}

// Feed OpenCV_DIR to CMake from local.properties (opencvsdk.dir)
def localProps = new Properties()
def localPropsFile = rootProject.file('local.properties')
if (localPropsFile.exists()) {
    localProps.load(new FileInputStream(localPropsFile))
    def ocvRoot = localProps.getProperty('opencvsdk.dir')
    if (ocvRoot != null) {
        android.defaultConfig.externalNativeBuild.cmake.arguments += [
                "-DOpenCV_DIR=${ocvRoot}/sdk/native/jni"
        ]
    }
}
